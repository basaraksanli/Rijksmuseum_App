// Mocks generated by Mockito 5.1.0 from annotations
// in rijksmuseum_app/test/unit_test/bloc_test/art_list_bloc_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:retrofit/dio.dart' as _i2;
import 'package:rijksmuseum_app/feature_art_list/data/remote/art_api.dart'
    as _i3;
import 'package:rijksmuseum_app/feature_art_list/data/remote/dto/art_object_detail_result_dto.dart'
    as _i6;
import 'package:rijksmuseum_app/feature_art_list/data/remote/dto/collection_dto.dart'
    as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeHttpResponse_0<T> extends _i1.Fake implements _i2.HttpResponse<T> {}

/// A class which mocks [ArtApi].
///
/// See the documentation for Mockito's code generation for more information.
class MockArtApi extends _i1.Mock implements _i3.ArtApi {
  MockArtApi() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.HttpResponse<_i5.CollectionDto>> getCollection(
          {int? page = 1, String? language = r'en', bool? imgOnly = true}) =>
      (super.noSuchMethod(
              Invocation.method(#getCollection, [],
                  {#page: page, #language: language, #imgOnly: imgOnly}),
              returnValue: Future<_i2.HttpResponse<_i5.CollectionDto>>.value(
                  _FakeHttpResponse_0<_i5.CollectionDto>()))
          as _i4.Future<_i2.HttpResponse<_i5.CollectionDto>>);
  @override
  _i4.Future<_i2.HttpResponse<String>> getImage(
          {String? language, String? id}) =>
      (super.noSuchMethod(
              Invocation.method(#getImage, [], {#language: language, #id: id}),
              returnValue: Future<_i2.HttpResponse<String>>.value(
                  _FakeHttpResponse_0<String>()))
          as _i4.Future<_i2.HttpResponse<String>>);
  @override
  _i4.Future<_i2.HttpResponse<_i6.ArtObjectDetailResultDto>> getArtObjectDetail(
          {String? language, String? id}) =>
      (super.noSuchMethod(
              Invocation.method(
                  #getArtObjectDetail, [], {#language: language, #id: id}),
              returnValue:
                  Future<_i2.HttpResponse<_i6.ArtObjectDetailResultDto>>.value(
                      _FakeHttpResponse_0<_i6.ArtObjectDetailResultDto>()))
          as _i4.Future<_i2.HttpResponse<_i6.ArtObjectDetailResultDto>>);
}
